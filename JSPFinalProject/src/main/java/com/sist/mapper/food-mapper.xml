<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.mapper.food-mapper">
  <!-- 맛집 카테고리 읽기 -->
  <!-- 
       String sql="";
		   ps=conn.prepareStatement(sql);
		   ResultSet rs=ps.executeQuery();
		   while(rs.next())
		   {
			   
			   list.add(vo);
		   }
		   rs.close();
   -->
  <select id="foodCategoryData" resultType="FoodCategoryVO">
   <!-- 
         List<FoodCategoryVO> = selectList
         FoodCategoryVO       = selectOne
         
         1.sql  
         2.? ==> parameterType
         3.결과값 (VO ,String,int...) resultType
    -->
    SELECT cno,title,subject,poster 
    FROM food_category
  </select>
  <!-- 카테고리별 맛집 출력 -->
  <select id="foodListData" resultType="FoodVO" parameterType="int"><!-- ps.setInt(1,cno) -->
    SELECT fno,poster,name,tel,type,address,score
    FROM food_house
    WHERE cno=#{cno}
    
  </select>
  <select id="foodCategoryInfoData" resultType="FoodCategoryVO" parameterType="int">
    SELECT title,subject
    FROM food_category
    WHERE cno=#{cno}
  </select>
  
  <!-- 상세보기  -->
  <select id="foodDetailData" resultType="FoodVO" parameterType="int">
    SELECT * FROM food_house
    WHERE fno=#{fno}
  </select>
  
  <!--  지역별 맛집 찾기 -->
  <select id="foodLocationFindData" resultType="FoodVO" parameterType="hashmap">
    SELECT fno,name,score,poster,type,address,num
    FROM (SELECT fno,name,score,poster,type,address,rownum as num 
    FROM (SELECT fno,name,score,poster,type,address 
    FROM food_location WHERE address LIKE '%'||#{address}||'%' ORDER BY fno ASC))
    WHERE num BETWEEN #{start} AND #{end}
  </select>
  <select id="foodLocationFindTotalPage" resultType="int" parameterType="string">
    SELECT CEIL(COUNT(*)/12.0) FROM food_location
    WHERE address LIKE '%'||#{address}||'%'
  </select>
  
  <!-- 찜하기 -->
  <insert id="foodJjimInsert" parameterType="com.sist.vo.JjimVO">
    <selectKey keyProperty="no" resultType="int" order="BEFORE">
     SELECT NVL(MAX(no)+1,1) as no FROM jjim
    </selectKey>
    INSERT INTO jjim VALUES(#{no},#{id},#{fno})
  </insert>
  
  <!-- 찜 여부 확인 -->
  <select id="foodJjimCount" resultType="int" parameterType="com.sist.vo.JjimVO">
    SELECT COUNT(*) FROM jjim
    WHERE fno=#{fno} AND id=#{id}
  </select>
  
  <!-- 찜 출력 (마이페이지) : forEach -->
  <select id="foodJjimListData" resultType="FoodVO" parameterType="int">
    SELECT * FROM food_house
    WHERE fno=#{fno}
  </select>
  
  <select id="foodJjimGetFno" resultType="int" parameterType="string">
    SELECT fno FROM Jjim
    WHERE id=#{id}
  </select>
  <!--  찜 취소 -->
  <delete id="foodJjimDelete" parameterType="com.sist.vo.JjimVO">
   DELETE FROM Jjim
   WHERE id=#{id} AND fno=#{fno}
  </delete>
  <!--  닭 | 오리 요리 -->
  <select id="foodRecipeMakeData" resultType="RecipeVO" parameterType="string">
    SELECT no,title,poster,rownum,chef
    FROM recipe
    WHERE REGEXP_LIKE(title,#{type})
    AND rownum&lt;=5
  </select>
  <!-- 
              REGEXP_LIKE(컬럼명,'regex')
              정규식
               [] = 범위  
                    [A-C] A,B,C
                    [1-5] 1,2,3,4,5
                    [가-다] 가,나,다
                    [A-Z]
               {} = 갯수
                    [A-Z]{1,3}  A AA AAA 
                    [0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3} IP
                    211.63.89.131
                    127.0.0.1
                    
                    ^[A-Z] 알파벳 시작
                    [^A-Z] 알파벳제외
                    [A-Z]$ 알파벳으로 종료
                    [A-Z]+ 알파벳이 1개 이상 
                    [A-Z]* 알파벳이 0개이상 
                    
                    [0-9] , [가-힣]
   -->
</mapper>







